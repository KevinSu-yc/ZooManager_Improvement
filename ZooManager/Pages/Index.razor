@page "/"
@using ZooManager

<style>

    button {
        width: 75px;
        height: 75px;
        font-size: 50px;
    }

    button.sm {
        display: inline-flex;
        width: 50px;
        height: 50px;
        justify-content: center;
        align-items: center;
        font-size: 30px;
    }


    /* (Feature r)
     * Add style to animal zones to show reaction time and turn on board on the game interface
     */
    button.zone-box {
        display: inline-flex;
        width: 80px;
        height: 80px;
        flex-direction: column; /* arrange the elements in this class from top to bottom */
        justify-content: center;
        align-items: center;
    }

    span.zone-emoji {
        font-size: 26px;
    }

    span.zone-status {
        font-size: 12px;
        font-weight: bold;
        line-height: 1; /* space between lines of text */
    }

</style>

<div class="container">
    <div class="row">
        <div class="col-5">
            <h3 style="text-align:end">Add Zones:</h3>
        </div>
        <div class="col-1">
            <button @onclick="@(() => Game.AddZones(Direction.down))"
                    type="button" class="sm btn btn-outline-dark">
                ⏬
            </button>
        </div>
        @*<div class="col-1">
                <button @onclick="@(() => Game.AddZones(Direction.up))"
                        type="button" class="sm btn btn-outline-dark">
                    <h2>⏫</h2>
                </button>
            </div>*@
        @*<div class="col-1">
                <button @onclick="@(() => Game.AddZones(Direction.left))"
                        type="button" class="sm btn btn-outline-dark">
                    <h2>⏪</h2>
                </button>
            </div>*@
        <div class="col-1">
            <button @onclick="@(() => Game.AddZones(Direction.right))"
                    type="button" class="sm btn btn-outline-dark">
                ⏩
            </button>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <hr />
        </div>
    </div>

    <div class="row">
        <div class="col-5">
            <h3 style="text-align:end">Add Animal to Holding:</h3>
        </div>
        <div class="col-1">
            <button @onclick="@(() => Game.AddOccupantToHolding("cat"))"
                    type="button" class="sm btn btn-outline-dark">
                🐱
            </button>
        </div>
        <div class="col-1">
            <button @onclick="@(() => Game.AddOccupantToHolding("mouse"))"
                    type="button" class="sm btn btn-outline-dark">
                🐭
            </button>
        </div>
        <div class="col-1">
            <button @onclick="@(() => Game.AddOccupantToHolding("raptor"))"
                    type="button" class="sm btn btn-outline-dark">
                🦅
            </button>
        </div>
        <div class="col-1">
            <button @onclick="@(() => Game.AddOccupantToHolding("chick"))"
                    type="button" class="sm btn btn-outline-dark">
                🐥
            </button>
        </div>
        <div class="col-1">
            <button @onclick="@(() => Game.AddOccupantToHolding("alien"))"
                    type="button" class="sm btn btn-outline-dark">
                👽
            </button>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <hr />
        </div>
    </div>

    <div class="row">
        <div class="col-5">
            <h3 style="text-align:end">Holding Pen:</h3>
        </div>
        <div class="col">
            <!-- (Feature r)
            In each animal zone, under the emoji, display the numbers of reaction time and turn on board with a label before them
            -->
            <button disabled type="button" class="btn btn-outline-dark zone-box">
                <span class="zone-emoji">@Game.holdingPen.emoji</span>

                <!-- if the number is an empty string, remain empty, otherwise, add a label before it to describe the number -->
                <span class="zone-status">@(Game.holdingPen.rtLabel == "" ? "" : "React: " + Game.holdingPen.rtLabel) </span>
                <span class="zone-status text-primary">@(Game.holdingPen.rtLabel == "" ? "" : "Turn: " + Game.holdingPen.turnLabel) </span>
            </button>
        </div>    
    </div>

    <div class="row">
        <div class="col">
            <hr />
        </div>
    </div>

    <div class="row">
        <div class="col">
            <table align="center">
                @for (var y = 0; y < Game.numCellsY; y++)
                {
                    <tr>
                        @for (var x = 0; x < Game.numCellsX; x++)
                        {
                            var a = Game.animalZones[y][x];
                            <td>
                                <button @onclick="@(() => Game.ZoneClick(a))"
                                        type="button" class="btn btn-outline-dark zone-box">
                                    <span class="zone-emoji">@a.emoji</span>
                                    <span class="zone-status">@(a.rtLabel == "" ? "" : "React: " + a.rtLabel) </span>
                                    <span class="zone-status text-primary">@(a.rtLabel == "" ? "" : "Turn: " + a.turnLabel) </span>
                                </button>
                            </td>
                        }
                    </tr>
                }
            </table>

        </div>

        <!--(Feature s) Add an area for turn updates in the same row with the animal zones -->
        <div class="col-4 alert alert-secondary">
            <div class="row">
                <div class="col">
                    <h4>Turn Updates:</h4>
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <!-- If it's turn 0, show Set Up Zoo, otherwise, show the turn number -->
                    <b>@(Game.turn == 0 ? "Set Up Zoo" : "Turn " + Game.turn)</b>
                    <ul class="list-unstyled">
                        @foreach (string updateMessage in Game.updateMessages)
                        {
                            <li>@updateMessage</li>
                        }
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    protected override void OnInitialized()
    {
        Game.SetUpGame();
    }
}


